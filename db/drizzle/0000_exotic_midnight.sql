CREATE TYPE "public"."guide_session_event_type" AS ENUM('session_started', 'step_added', 'step_completed', 'step_updated', 'action_performed', 'completed', 'abandoned', 'paused', 'resumed');--> statement-breakpoint
CREATE TYPE "public"."guide_session_status" AS ENUM('started', 'planning', 'active', 'completed', 'abandoned', 'paused');--> statement-breakpoint
CREATE TABLE "agent_messages" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "agent_messages_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"agent_thread_id" bigint NOT NULL,
	"role" text NOT NULL,
	"content" text NOT NULL,
	"metadata" jsonb,
	"slack_channel" text,
	"message_ts" text
);
--> statement-breakpoint
ALTER TABLE "agent_messages" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "agent_threads" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "agent_threads_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"mailbox_id" bigint,
	"slack_channel" text NOT NULL,
	"thread_ts" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "agent_threads" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "mailboxes_aiusageevent" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_aiusageevent_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"model_name" varchar NOT NULL,
	"query_type" varchar NOT NULL,
	"input_tokens_count" integer NOT NULL,
	"output_tokens_count" integer NOT NULL,
	"cached_tokens_count" integer DEFAULT 0 NOT NULL,
	"cost" numeric(12, 7) NOT NULL,
	"mailbox_id" bigint
);
--> statement-breakpoint
ALTER TABLE "mailboxes_aiusageevent" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "cache" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "cache_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"key" text NOT NULL,
	"value" jsonb NOT NULL,
	"expires_at" timestamp,
	CONSTRAINT "cache_key_idx" UNIQUE("key")
);
--> statement-breakpoint
ALTER TABLE "cache" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "conversation_events" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "conversation_events_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"conversation_id" bigint NOT NULL,
	"type" text DEFAULT 'update' NOT NULL,
	"changes" jsonb NOT NULL,
	"by_clerk_user_id" text,
	"reason" text
);
--> statement-breakpoint
ALTER TABLE "conversation_events" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "messages" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "messages_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"conversation_id" bigint NOT NULL,
	"email_to" varchar(65535),
	"email_from" text,
	"email_cc" jsonb,
	"email_bcc" jsonb,
	"encrypted_body" "bytea",
	"body" text,
	"encrypted_cleaned_up_text" "bytea",
	"cleaned_up_text" text,
	"role" text NOT NULL,
	"clerk_user_id" text,
	"metadata" jsonb,
	"response_to_id" bigint,
	"status" text,
	"message_id" text,
	"references" text,
	"gmail_message_id" text,
	"gmail_thread_id" text,
	"is_pinned" boolean NOT NULL,
	"slack_channel" text,
	"slack_message_ts" text,
	"is_perfect" boolean NOT NULL,
	"is_flagged_as_bad" boolean NOT NULL,
	"prompt_info" jsonb,
	"reason" varchar(65535),
	"deleted_at" timestamp with time zone,
	"search_index" text,
	"reaction_type" text,
	"reaction_feedback" text,
	"reaction_created_at" timestamp with time zone
);
--> statement-breakpoint
ALTER TABLE "messages" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "conversations_conversation" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "conversations_conversation_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"email_from" text,
	"encrypted_subject" "bytea",
	"subject" text,
	"status" text,
	"mailbox_id" bigint NOT NULL,
	"email_from_name" text,
	"slug" varchar(50) NOT NULL,
	"last_user_email_created_at" timestamp with time zone,
	"last_read_at" timestamp with time zone,
	"conversation_provider" text,
	"closed_at" timestamp with time zone,
	"assigned_to_clerk_id" text,
	"summary" jsonb,
	"embedding" vector(1536),
	"embedding_text" text,
	"source" text,
	"github_issue_number" integer,
	"github_issue_url" text,
	"github_repo_owner" text,
	"github_repo_name" text,
	"is_prompt" boolean DEFAULT false NOT NULL,
	"is_visitor" boolean DEFAULT false NOT NULL,
	"assigned_to_ai" boolean DEFAULT false NOT NULL,
	"merged_into_id" bigint,
	"anonymous_session_id" text,
	"issue_group_id" bigint,
	"suggested_actions" jsonb,
	CONSTRAINT "conversations_conversation_slug_key" UNIQUE("slug")
);
--> statement-breakpoint
ALTER TABLE "conversations_conversation" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "faqs" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "faqs_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"reply" text NOT NULL,
	"mailbox_id" bigint NOT NULL,
	"embedding" vector(1536),
	"enabled" boolean DEFAULT true NOT NULL,
	"suggested" boolean DEFAULT false NOT NULL,
	"suggested_replacement_for_id" bigint,
	"message_id" bigint,
	"slack_channel" text,
	"slack_message_ts" text,
	CONSTRAINT "faqs_message_id_key" UNIQUE("message_id")
);
--> statement-breakpoint
ALTER TABLE "faqs" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "conversations_file" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "conversations_file_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"name" text NOT NULL,
	"url" text NOT NULL,
	"mimetype" text NOT NULL,
	"size" integer NOT NULL,
	"message_id" bigint,
	"note_id" bigint,
	"preview_url" text,
	"is_inline" boolean NOT NULL,
	"is_public" boolean NOT NULL,
	"slug" varchar(50) NOT NULL,
	CONSTRAINT "conversations_file_slug_key" UNIQUE("slug")
);
--> statement-breakpoint
ALTER TABLE "conversations_file" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "mailboxes_gmailsupportemail" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_gmailsupportemail_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"email" varchar(254) NOT NULL,
	"expires_at" timestamp with time zone,
	"history_id" integer,
	"encrypted_access_token" "bytea",
	"access_token" text,
	"encrypted_refresh_token" "bytea",
	"refresh_token" text,
	CONSTRAINT "mailboxes_supportemail_email_key" UNIQUE("email")
);
--> statement-breakpoint
ALTER TABLE "mailboxes_gmailsupportemail" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "guide_session_events" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "guide_session_events_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"guide_session_id" bigint NOT NULL,
	"type" "guide_session_event_type" NOT NULL,
	"data" jsonb DEFAULT '{}'::jsonb,
	"timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"mailbox_id" bigint NOT NULL
);
--> statement-breakpoint
ALTER TABLE "guide_session_events" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "guide_session_replays" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "guide_session_replays_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"guide_session_id" bigint NOT NULL,
	"type" text NOT NULL,
	"data" text NOT NULL,
	"timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"metadata" jsonb DEFAULT '{}'::jsonb,
	"mailbox_id" bigint NOT NULL
);
--> statement-breakpoint
ALTER TABLE "guide_session_replays" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "guide_sessions" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "guide_sessions_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"uuid" uuid DEFAULT gen_random_uuid() NOT NULL,
	"platform_customer_id" bigint NOT NULL,
	"conversation_id" bigint,
	"status" "guide_session_status" DEFAULT 'started' NOT NULL,
	"title" text NOT NULL,
	"instructions" text,
	"steps" jsonb DEFAULT '[]'::jsonb,
	"metadata" jsonb DEFAULT '{}'::jsonb,
	"mailbox_id" bigint NOT NULL,
	CONSTRAINT "guide_sessions_uuid_unique" UNIQUE("uuid")
);
--> statement-breakpoint
ALTER TABLE "guide_sessions" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "user_identities" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"user_id" uuid NOT NULL,
	"provider" text NOT NULL,
	"provider_id" text NOT NULL,
	"provider_data" jsonb DEFAULT '{}'::jsonb,
	"created_at" timestamp DEFAULT now(),
	"updated_at" timestamp DEFAULT now()
);
--> statement-breakpoint
CREATE TABLE "user_sessions" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"user_id" uuid NOT NULL,
	"token" text NOT NULL,
	"expires_at" timestamp NOT NULL,
	"user_agent" text,
	"ip_address" text,
	"created_at" timestamp DEFAULT now(),
	"updated_at" timestamp DEFAULT now(),
	CONSTRAINT "user_sessions_token_unique" UNIQUE("token")
);
--> statement-breakpoint
CREATE TABLE "users" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"email" varchar(255) NOT NULL,
	"password" text NOT NULL,
	"display_name" text DEFAULT '',
	"permissions" text DEFAULT 'member' NOT NULL,
	"email_verified" boolean DEFAULT false,
	"is_active" boolean DEFAULT true,
	"metadata" jsonb DEFAULT '{}'::jsonb,
	"deleted_at" timestamp,
	"created_at" timestamp DEFAULT now(),
	"updated_at" timestamp DEFAULT now(),
	"access" jsonb DEFAULT '{"role":"afk","keywords":[]}'::jsonb,
	"pinned_issue_group_ids" jsonb DEFAULT '[]'::jsonb,
	CONSTRAINT "users_email_unique" UNIQUE("email")
);
--> statement-breakpoint
CREATE TABLE "mailboxes_mailbox" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_mailbox_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"name" text NOT NULL,
	"slug" varchar(50) NOT NULL,
	"gmail_support_email_id" bigint,
	"slack_escalation_channel" text,
	"slack_bot_token" text,
	"slack_bot_user_id" text,
	"slack_team_id" text,
	"github_installation_id" text,
	"github_repo_owner" text,
	"github_repo_name" text,
	"prompt_updated_at" timestamp with time zone NOT NULL,
	"widget_hmac_secret" varchar(255) NOT NULL,
	"widget_display_mode" text DEFAULT 'always' NOT NULL,
	"widget_display_min_value" bigint,
	"widget_host" text,
	"vip_threshold" bigint,
	"vip_channel_id" text,
	"vip_expected_response_hours" integer,
	"is_whitelabel" boolean DEFAULT false NOT NULL,
	"auto_close_enabled" boolean DEFAULT false NOT NULL,
	"auto_close_days_of_inactivity" integer DEFAULT 14 NOT NULL,
	"chat_integration_used" boolean DEFAULT false NOT NULL,
	"preferences" jsonb DEFAULT '{}'::jsonb,
	CONSTRAINT "mailboxes_mailbox_slug_key" UNIQUE("slug"),
	CONSTRAINT "mailboxes_mailbox_support_email_id_key" UNIQUE("gmail_support_email_id")
);
--> statement-breakpoint
ALTER TABLE "mailboxes_mailbox" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "mailboxes_metadataapi" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_metadataapi_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"url" text NOT NULL,
	"hmac_secret" text NOT NULL,
	"is_enabled" boolean NOT NULL,
	"mailbox_id" bigint NOT NULL,
	"deleted_at" timestamp with time zone,
	CONSTRAINT "mailboxes_metadataapi_mailbox_id_key" UNIQUE("mailbox_id")
);
--> statement-breakpoint
ALTER TABLE "mailboxes_metadataapi" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "mailboxes_platformcustomer" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_platformcustomer_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"mailbox_id" bigint NOT NULL,
	"email" varchar(255) NOT NULL,
	"name" varchar,
	"value" numeric(12, 2),
	"links" jsonb,
	CONSTRAINT "mailboxes_platformcustomer_email_key" UNIQUE("email")
);
--> statement-breakpoint
ALTER TABLE "mailboxes_platformcustomer" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "conversations_note" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "conversations_note_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"body" text NOT NULL,
	"clerk_user_id" text,
	"role" text,
	"conversation_id" bigint NOT NULL,
	"slack_message_ts" text,
	"slack_channel" text
);
--> statement-breakpoint
ALTER TABLE "conversations_note" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "message_notifications" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "message_notifications_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"message_id" bigint NOT NULL,
	"conversation_id" bigint NOT NULL,
	"platform_customer_id" bigint NOT NULL,
	"status" text DEFAULT 'pending' NOT NULL,
	"notification_text" text,
	"sent_at" timestamp with time zone,
	"read_at" timestamp with time zone
);
--> statement-breakpoint
ALTER TABLE "message_notifications" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "website_docs_crawls" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "website_docs_crawls_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"website_id" bigint NOT NULL,
	"name" varchar(255) NOT NULL,
	"status" varchar(50) NOT NULL,
	"metadata" jsonb,
	"error_message" text,
	"started_at" timestamp with time zone NOT NULL,
	"completed_at" timestamp with time zone
);
--> statement-breakpoint
ALTER TABLE "website_docs_crawls" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "website_docs_pages" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "website_docs_pages_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"website_id" bigint NOT NULL,
	"website_crawl_id" bigint NOT NULL,
	"url" text NOT NULL,
	"raw_html" text NOT NULL,
	"markdown" text NOT NULL,
	"page_title" text NOT NULL,
	"metadata" jsonb,
	"embedding" vector(1536),
	"deleted_at" timestamp with time zone
);
--> statement-breakpoint
ALTER TABLE "website_docs_pages" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "website_docs" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "website_docs_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"mailbox_id" bigint NOT NULL,
	"name" varchar(255) NOT NULL,
	"url" text NOT NULL,
	"deleted_at" timestamp with time zone
);
--> statement-breakpoint
ALTER TABLE "website_docs" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "tool_apis" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "tool_apis_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"name" text NOT NULL,
	"mailbox_id" bigint NOT NULL,
	"base_url" text,
	"schema" text,
	"encrypted_authentication_token" "bytea",
	"authentication_token" text
);
--> statement-breakpoint
ALTER TABLE "tool_apis" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "tools" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "tools_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"name" text NOT NULL,
	"description" text NOT NULL,
	"mailbox_id" bigint NOT NULL,
	"slug" text NOT NULL,
	"request_method" text NOT NULL,
	"url" text NOT NULL,
	"headers" jsonb DEFAULT '{}',
	"parameters" jsonb DEFAULT '[]',
	"authentication_method" text DEFAULT 'none' NOT NULL,
	"encrypted_authentication_token" "bytea",
	"authentication_token" text,
	"tool_api_id" bigint,
	"enabled" boolean DEFAULT true NOT NULL,
	"available_in_chat" boolean DEFAULT false NOT NULL,
	"available_in_anonymous_chat" boolean DEFAULT false NOT NULL,
	"customer_email_parameter" text
);
--> statement-breakpoint
ALTER TABLE "tools" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "job_runs" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "job_runs_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"queue_message_id" bigint,
	"job" text NOT NULL,
	"event" text,
	"data" jsonb NOT NULL,
	"status" text DEFAULT 'pending' NOT NULL,
	"result" jsonb,
	"error" text,
	"attempts" integer DEFAULT 0 NOT NULL
);
--> statement-breakpoint
ALTER TABLE "job_runs" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "http_requests" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "http_requests_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"url" text NOT NULL,
	"method" varchar(10) DEFAULT 'GET' NOT NULL,
	"headers" jsonb,
	"body" text,
	"response_status" integer,
	"response_body" text,
	"response_headers" jsonb,
	"created_at" timestamp DEFAULT now(),
	"completed_at" timestamp,
	"error_message" text
);
--> statement-breakpoint
CREATE TABLE "jobs" (
	"id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY (sequence name "jobs_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"type" varchar(255) NOT NULL,
	"payload" jsonb,
	"status" varchar(50) DEFAULT 'pending' NOT NULL,
	"scheduled_for" timestamp DEFAULT now(),
	"created_at" timestamp DEFAULT now(),
	"updated_at" timestamp DEFAULT now(),
	"attempts" integer DEFAULT 0,
	"max_attempts" integer DEFAULT 3,
	"last_error" text
);
--> statement-breakpoint
CREATE TABLE "user_profiles" (
	"id" uuid PRIMARY KEY NOT NULL,
	"display_name" text DEFAULT '',
	"permissions" text DEFAULT 'member' NOT NULL,
	"deleted_at" timestamp,
	"created_at" timestamp DEFAULT now(),
	"updated_at" timestamp DEFAULT now(),
	"access" jsonb DEFAULT '{"role":"afk","keywords":[]}'::jsonb,
	"pinned_issue_group_ids" jsonb DEFAULT '[]'::jsonb
);
--> statement-breakpoint
ALTER TABLE "user_profiles" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "saved_replies" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "saved_replies_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"slug" varchar(50) NOT NULL,
	"name" varchar(100) NOT NULL,
	"content" text NOT NULL,
	"mailbox_id" bigint NOT NULL,
	"created_by_user_id" text,
	"is_active" boolean DEFAULT true NOT NULL,
	"usage_count" integer DEFAULT 0 NOT NULL
);
--> statement-breakpoint
ALTER TABLE "saved_replies" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "issue_groups" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "issue_groups_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"title" text NOT NULL,
	"description" text,
	"embedding" vector(1536)
);
--> statement-breakpoint
ALTER TABLE "issue_groups" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
ALTER TABLE "user_identities" ADD CONSTRAINT "user_identities_user_id_users_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "user_sessions" ADD CONSTRAINT "user_sessions_user_id_users_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "user_profiles" ADD CONSTRAINT "user_profiles_id_users_id_fk" FOREIGN KEY ("id") REFERENCES "public"."users"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "saved_replies" ADD CONSTRAINT "saved_replies_mailbox_id_mailboxes_mailbox_id_fk" FOREIGN KEY ("mailbox_id") REFERENCES "public"."mailboxes_mailbox"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "agent_messages_agent_thread_id_idx" ON "agent_messages" USING btree ("agent_thread_id");--> statement-breakpoint
CREATE UNIQUE INDEX "agent_messages_slack_unique_idx" ON "agent_messages" USING btree ("slack_channel","message_ts");--> statement-breakpoint
CREATE INDEX "agent_threads_mailbox_id_idx" ON "agent_threads" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX "agent_threads_slack_channel_thread_ts_idx" ON "agent_threads" USING btree ("slack_channel","thread_ts");--> statement-breakpoint
CREATE INDEX "mailboxes_aiusageevent_created_at_74823d57" ON "mailboxes_aiusageevent" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "mailboxes_aiusageevent_mailbox_id_a4908f79" ON "mailboxes_aiusageevent" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX "mailboxes_aiusageevent_model_name_84b8ca7a" ON "mailboxes_aiusageevent" USING btree ("model_name");--> statement-breakpoint
CREATE INDEX "mailboxes_aiusageevent_model_name_84b8ca7a_like" ON "mailboxes_aiusageevent" USING btree ("model_name");--> statement-breakpoint
CREATE INDEX "mailboxes_aiusageevent_query_type_b4a486cb" ON "mailboxes_aiusageevent" USING btree ("query_type");--> statement-breakpoint
CREATE INDEX "mailboxes_aiusageevent_query_type_b4a486cb_like" ON "mailboxes_aiusageevent" USING btree ("query_type");--> statement-breakpoint
CREATE INDEX "cache_expires_at_idx" ON "cache" USING btree ("expires_at");--> statement-breakpoint
CREATE INDEX "conversation_events_conversation_id_idx" ON "conversation_events" USING btree ("conversation_id");--> statement-breakpoint
CREATE INDEX "conversation_events_by_clerk_user_id_idx" ON "conversation_events" USING btree ("by_clerk_user_id");--> statement-breakpoint
CREATE INDEX "conversation_events_type_created_at_idx" ON "conversation_events" USING btree ("type","created_at");--> statement-breakpoint
CREATE INDEX "conversatio_created_c4e0d1_idx" ON "messages" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "conversations_email_conversation_id_391ad973" ON "messages" USING btree ("conversation_id");--> statement-breakpoint
CREATE INDEX "conversations_email_gmail_message_id_3f6ee5ab" ON "messages" USING btree ("gmail_message_id");--> statement-breakpoint
CREATE INDEX "conversations_email_gmail_thread_id_68f031bf" ON "messages" USING btree ("gmail_thread_id");--> statement-breakpoint
CREATE INDEX "conversations_email_is_pinned_ab83d24f" ON "messages" USING btree ("is_pinned");--> statement-breakpoint
CREATE INDEX "conversations_email_message_id_a19e9ac9" ON "messages" USING btree ("message_id");--> statement-breakpoint
CREATE INDEX "conversations_email_response_to_id_af0048dc" ON "messages" USING btree ("response_to_id");--> statement-breakpoint
CREATE INDEX "conversations_email_clerk_user_id" ON "messages" USING btree ("clerk_user_id");--> statement-breakpoint
CREATE INDEX "search_index_idx" ON "messages" USING gin (string_to_array("search_index", ' ') array_ops);--> statement-breakpoint
CREATE INDEX "messages_reason_idx" ON "messages" USING btree ("reason");--> statement-breakpoint
CREATE INDEX "messages_slack_message_ts_idx" ON "messages" USING btree ("slack_message_ts");--> statement-breakpoint
CREATE INDEX "messages_reaction_count_idx" ON "messages" USING btree ("reaction_type","reaction_created_at") WHERE "messages"."deleted_at" is null;--> statement-breakpoint
CREATE INDEX "messages_role_created_at_idx" ON "messages" USING btree ("role","created_at");--> statement-breakpoint
CREATE INDEX "conversations_conversation_assigned_to_clerk_id" ON "conversations_conversation" USING btree ("assigned_to_clerk_id");--> statement-breakpoint
CREATE INDEX "conversations_conversation_closed_at_16474e94" ON "conversations_conversation" USING btree ("closed_at");--> statement-breakpoint
CREATE INDEX "conversations_conversation_created_at_1ec48787" ON "conversations_conversation" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "conversations_conversation_email_from_aab3d292" ON "conversations_conversation" USING btree ("email_from");--> statement-breakpoint
CREATE INDEX "conversations_conversation_email_from_aab3d292_like" ON "conversations_conversation" USING btree ("email_from");--> statement-breakpoint
CREATE INDEX "conversations_conversation_last_user_email_created_at_fc6b89db" ON "conversations_conversation" USING btree ("last_user_email_created_at");--> statement-breakpoint
CREATE INDEX "conversations_conversation_mailbox_id_7fb25662" ON "conversations_conversation" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX "conversations_conversation_slug_9924e9b1_like" ON "conversations_conversation" USING btree ("slug");--> statement-breakpoint
CREATE INDEX "embedding_vector_index" ON "conversations_conversation" USING hnsw ("embedding" vector_cosine_ops);--> statement-breakpoint
CREATE INDEX "conversations_anonymous_session_id_idx" ON "conversations_conversation" USING btree ("anonymous_session_id");--> statement-breakpoint
CREATE INDEX "conversations_merged_into_id_idx" ON "conversations_conversation" USING btree ("merged_into_id");--> statement-breakpoint
CREATE INDEX "conversations_issue_group_id_idx" ON "conversations_conversation" USING btree ("issue_group_id");--> statement-breakpoint
CREATE INDEX "conversations_conversation_status_last_user_email_created_at_idx" ON "conversations_conversation" USING btree ("status","last_user_email_created_at" DESC NULLS LAST) WHERE "conversations_conversation"."merged_into_id" is null;--> statement-breakpoint
CREATE INDEX "faqs_mailbox_created_at_idx" ON "faqs" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "faqs_mailbox_id_idx" ON "faqs" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX "faqs_embedding_index" ON "faqs" USING hnsw ("embedding" vector_cosine_ops);--> statement-breakpoint
CREATE INDEX "conversatio_created_9fddde_idx" ON "conversations_file" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "conversations_file_message_id_idx" ON "conversations_file" USING btree ("message_id");--> statement-breakpoint
CREATE INDEX "conversations_file_note_id_idx" ON "conversations_file" USING btree ("note_id");--> statement-breakpoint
CREATE INDEX "mailboxes_gmailsupportemail_created_at_321a00f1" ON "mailboxes_gmailsupportemail" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "mailboxes_supportemail_email_99536dd8_like" ON "mailboxes_gmailsupportemail" USING btree ("email");--> statement-breakpoint
CREATE INDEX "guide_session_events_timestamp_idx" ON "guide_session_events" USING btree ("timestamp");--> statement-breakpoint
CREATE INDEX "guide_session_events_guide_session_id_idx" ON "guide_session_events" USING btree ("guide_session_id");--> statement-breakpoint
CREATE INDEX "guide_session_events_type_idx" ON "guide_session_events" USING btree ("type");--> statement-breakpoint
CREATE INDEX "guide_session_events_mailbox_id_idx" ON "guide_session_events" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX "guide_session_replays_guide_session_id_idx" ON "guide_session_replays" USING btree ("guide_session_id");--> statement-breakpoint
CREATE INDEX "guide_session_replays_timestamp_idx" ON "guide_session_replays" USING btree ("timestamp");--> statement-breakpoint
CREATE INDEX "guide_session_replays_mailbox_id_idx" ON "guide_session_replays" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX "guide_sessions_created_at_idx" ON "guide_sessions" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "guide_sessions_platform_customer_id_idx" ON "guide_sessions" USING btree ("platform_customer_id");--> statement-breakpoint
CREATE INDEX "guide_sessions_conversation_id_idx" ON "guide_sessions" USING btree ("conversation_id");--> statement-breakpoint
CREATE INDEX "guide_sessions_mailbox_id_idx" ON "guide_sessions" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX "guide_sessions_status_idx" ON "guide_sessions" USING btree ("status");--> statement-breakpoint
CREATE INDEX "mailboxes_mailbox_created_at_5d4ea7d0" ON "mailboxes_mailbox" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "mailboxes_metadataapi_created_at_1ee2d2c2" ON "mailboxes_metadataapi" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "mailboxes_platformcustomer_created_at_73183c2a" ON "mailboxes_platformcustomer" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "mailboxes_platformcustomer_mailbox_id_58ea76bf" ON "mailboxes_platformcustomer" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX "mailboxes_platformcustomer_email_idx" ON "mailboxes_platformcustomer" USING btree ("email");--> statement-breakpoint
CREATE INDEX "conversatio_created_5ad461_idx" ON "conversations_note" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "conversations_note_conversation_id_a486ed4c" ON "conversations_note" USING btree ("conversation_id");--> statement-breakpoint
CREATE INDEX "conversations_note_clerk_user_id" ON "conversations_note" USING btree ("clerk_user_id");--> statement-breakpoint
CREATE INDEX "message_notifications_message_id_idx" ON "message_notifications" USING btree ("message_id");--> statement-breakpoint
CREATE INDEX "message_notifications_conversation_id_idx" ON "message_notifications" USING btree ("conversation_id");--> statement-breakpoint
CREATE INDEX "message_notifications_platform_customer_id_idx" ON "message_notifications" USING btree ("platform_customer_id");--> statement-breakpoint
CREATE INDEX "message_notifications_status_idx" ON "message_notifications" USING btree ("status");--> statement-breakpoint
CREATE INDEX "website_crawls_created_at_idx" ON "website_docs_crawls" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "website_crawls_website_id_idx" ON "website_docs_crawls" USING btree ("website_id");--> statement-breakpoint
CREATE INDEX "website_crawls_status_idx" ON "website_docs_crawls" USING btree ("status");--> statement-breakpoint
CREATE INDEX "website_pages_created_at_idx" ON "website_docs_pages" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "website_pages_website_id_idx" ON "website_docs_pages" USING btree ("website_id");--> statement-breakpoint
CREATE INDEX "website_pages_website_crawl_id_idx" ON "website_docs_pages" USING btree ("website_crawl_id");--> statement-breakpoint
CREATE INDEX "website_pages_url_idx" ON "website_docs_pages" USING btree ("url");--> statement-breakpoint
CREATE INDEX "website_pages_embedding_index" ON "website_docs_pages" USING hnsw ("embedding" vector_cosine_ops);--> statement-breakpoint
CREATE INDEX "websites_created_at_idx" ON "website_docs" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "websites_mailbox_id_idx" ON "website_docs" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX "websites_url_idx" ON "website_docs" USING btree ("url");--> statement-breakpoint
CREATE INDEX "tool_apis_mailbox_id_idx" ON "tool_apis" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX "tools_mailbox_id_idx" ON "tools" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX "tools_tool_api_id_idx" ON "tools" USING btree ("tool_api_id");--> statement-breakpoint
CREATE UNIQUE INDEX "unique_slug_idx" ON "tools" USING btree ("slug");--> statement-breakpoint
CREATE INDEX "job_runs_created_at_idx" ON "job_runs" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "job_runs_job_idx" ON "job_runs" USING btree ("job");--> statement-breakpoint
CREATE INDEX "job_runs_status_idx" ON "job_runs" USING btree ("status");--> statement-breakpoint
CREATE INDEX "saved_replies_mailbox_id_idx" ON "saved_replies" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX "saved_replies_created_by_user_idx" ON "saved_replies" USING btree ("created_by_user_id");--> statement-breakpoint
CREATE INDEX "saved_replies_slug_idx" ON "saved_replies" USING btree ("slug");--> statement-breakpoint
CREATE UNIQUE INDEX "saved_replies_slug_mailbox_unique" ON "saved_replies" USING btree ("slug","mailbox_id");--> statement-breakpoint
CREATE INDEX "issue_groups_created_at_idx" ON "issue_groups" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "issue_groups_embedding_idx" ON "issue_groups" USING hnsw ("embedding" vector_cosine_ops);